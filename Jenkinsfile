pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "Maven" // you can find in Dashboard->tools->Maven installation name Note: if maven is not installed install and provide the name
    }
    
         environment{
            APP_NAME="spring-docker-cicd"
            RELEASE_NUMBER="1.0.0"
            DOCKER_USER="raziya9959"
            IMAGE_NAME="${DOCKER_USER}" + "/" +"${APP_NAME}" 
            IMAGE_TAG="${RELEASE_NUMBER}-${BUILD_NUMBER}"
        }
        
//// stage 1: scm checkout
// stage 2: build (till here CI)
// stage 3: deploy WAR (CD)
// stage 4: email (not a part of CI CD)
    stages {
        stage('SCM checkout') { // we can define any name inside stage()
            steps {
                // below command generated by clicking on below "pipeline syntax"-->select checkout from version control--> provide git url -->provide branch --> clcik on Generate Pipeline syntx
               checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/begumraziya98/jenkins-ci-cd.git']]) 
            }
        }
   
        stage('Build Process'){
            steps{
                script{
                    bat 'mvn clean install'
                }
            }
        }
        
      stage('Build Image'){
          steps{
              script{
              		def imageName = "${env.IMAGE_NAME}"
                    def imageTag = "${env.IMAGE_TAG}"
                    // Make sure to escape $ properly for bat
                  bat 'docker build -t ${imageName}:${imageTag} .'
                  
              }
          }
      }
      stage('Deploy Image to Hub'){
          steps{
              script{
                withCredentials([string(credentialsId: 'docker-cred', variable: 'docker-cred')]) {
                                    bat 'docker login -u ${DOCKER_USER} -p ${docker-cred}'
                                    bat 'docker push ${IMAGE_NAME}:${IMAGE_TAG}'
                            }
              }
          }
          
      }

            
        }
       
       post{
           always{
               emailext attachLog: true, body: '''<html>
                        <body>
                            <p>Build Status: ${BUILD_STATUS}</p>
                            <p>Build Number: ${BUILD_NUMBER}</p>
                            <p>Check the <a href="${BUILD_URL}">console output</a>.</p>
                        </body>
                      </html>''', mimeType: 'text/html', replyTo: 'raziyabegum85@gmail.com', subject: 'Pipeline Status : ${BUILD_NUMBER}', to: 'raziyabegum85@gmail.com'
           }
       } 
        
    }
